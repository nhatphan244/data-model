def validate_date(column_name, date_value):
    current_date = datetime.now().date()
    formatted_current_date = current_date.strftime('%d/%m/%Y')
    if pd.isna(date_value) or date_value == '':
        return True, ""
    
    if isinstance(date_value, str):
        try:
            date_obj = datetime.strptime(date_value, '%d/%m/%Y').date()
        except ValueError:
            return False, date_errors_message[column_name] + " (định dạng phải là dd/mm/yyyy)."
    elif isinstance(date_value, datetime):
        date_str = date_value.strftime('%d/%m/%Y')
        try:
            date_obj = datetime.strptime(date_str, '%d/%m/%Y').date()
        except ValueError:
            return False, date_errors_message[column_name] + " (định dạng phải là dd/mm/yyyy)."
    else:
        return False, date_errors_message[column_name] + " (định dạng phải là dd/mm/yyyy)."
    
    if column_name == 'JoinDate' or column_name == 'EndDate':
        if date_obj > formatted_current_date:
            return True, ""
        elif date_obj == formatted_current_date:
            return True, ""
        else:
            return False, date_errors_message[column_name] + " (không được là ngày trong quá khứ)."

    return True, ""

For this function, I want to convert all the data I got into dd/mm/yyyy, than compare it to currentdate ( also in dd/mm/yyyy format), if they are larger or equal to the currentdate time, return true, else print the error message
otherwise, print out the error message as follow.
