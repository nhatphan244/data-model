from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import Optional
from datetime import datetime
from tabulate import tabulate
import xlsxwriter
import uuid
import uvicorn



app = FastAPI()

class Payload(BaseModel):
    SentDate: str
    Csv: str  

class Webhook(BaseModel):
    data: dict
    created_date: datetime = datetime.now()
    last_run_date: Optional[datetime] = None
    num_of_retry: int = 0
    status: str = "new"


db = []
workbook =xlsxwriter.Workbook('test.xlsx')
worksheet = workbook.add_worksheet()

@app.post("/webhook")
def webhook_crawler(payload: Payload):

    if not payload.SentDate or not payload.Csv:
        raise HTTPException(status_code=400, detail="Invalid data format")

    id = str(uuid.uuid4())

 
    data = Webhook(data=payload.dict())
    db.append({"id": id, "data": data})

    return {"id": id, "message": "Hooking completed completed: data received successfully"}

@app.get("/run_jobs")
def run_jobs():
    for item in db:
        id = item["id"]
        data = item["data"]
        if data.status == "new" or (data.status == "failed" and data.num_of_retry < 3):
            execute_job(id)
            db_format()
    return {"message": "Jobs executed successfully"}


def execute_job(id: str):
    print(f"Executing job with ID: {id}")
    for item in db:
        if item["id"] == id:
            data = item["data"]
            data.status = "completed"
            data.last_run_date = datetime.now()
            break

def db_format():
    start_row = 1 
    if worksheet.dim_rowmax == 0:
        for col, header in enumerate(headers):
            worksheet.write(0, col, header)

    for idx, item in enumerate(db, start=start_row):
        job_id = item["id"]
        data = item["data"]
        row = [job_id, data.data["SentDate"], data.data["Csv"], data.created_date, data.last_run_date, data.num_of_retry, data.status]
        for col_idx, cell_data in enumerate(row):
            worksheet.write(idx, col_idx, cell_data)
            
            
if __name__ == "__main__":
    uvicorn.run(app, host="127.0.0.1", port=8000)
   
