import pandas as pd
import tkinter as tk
import re
from datetime import datetime
from tkinter import filedialog

duplicate_col = [
    'Id', 'ShortName', 'Name', 'ImageId'
]

mandatory_col = [
    'Id', 'ShortName', 'Name', 'PhoneNumber'
]

vn_col = [
    'Name', 'Address'
]

date_col = [
    'JoinDate','DateOfEstablishment'
]
date_errors_message ={
    'JoinDate': "Ngày tham gia không hợp lệ, ",
    'DateOfEstablishment' : "Ngày thành lập không hợp lệ, "
}
duplicate_errors_message = {
    'Id': "Mã định danh không được trùng!",
    'ShortName': "Tên viết tắt không được trùng!",
    'Name': "Tên nhà sản xuất không được trùng!",
    'ImageId': "Mã định danh hình ảnh không được trùng!"
}

Non_Vietnamese_errors_message = {
    'Name': "Tên nhà sản xuất phải là tiếng Việt có dấu",
    'Address': "Địa chỉ phải là tiếng Việt có dấu"
}

vietnamese_pattern = r'[àảãáạăằẳẵắặâầẩẫấậèẻẽéẹêềểễếệìỉĩíịòỏõóọôồổỗốộơờởỡớợùủũúụưừửữứựỳỷỹýỵđÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬÈẺẼÉẸÊỀỂỄẾỆÌỈĨÍỊÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢÙỦŨÚỤƯỪỬỮỨỰỲỶỸÝỴĐ]'
vietnamese_ruleset = re.compile(vietnamese_pattern)
 
def validate_vietnamese(text):
    if text is None:
        return False
        
    return bool(vietnamese_ruleset.search(text))

def validate_date(column_name, date_value):
    current_date = datetime.now()
    if column_name == 'JoinDate':
        # Check if JoinDate is in the past
        if date_value < current_date:
            return False, f"{date_errors_message[column_name]} không được là ngày trong quá khứ."
        return True, ""
    return False, date_errors_message[column_name] + "định dạng phải là dd/mm/yyyy."

def validation(df):
    errors = []
    #Check file trắng
    if df.empty:
        errors.append("File trống!")
        return errors
    #check ô trống
    for column in mandatory_col:
        if df[column].isnull().any():
            for index, value in df[df[column].isnull()].iterrows():
                errors.append(f"Lỗi ở dòng {index + 1}, {column}: Bạn điền thiếu thông tin!")
    #check duplicate
    for column in duplicate_col:
        duplicate_values = df[df.duplicated(column, keep='first') & ~df[column].isnull()]
        if not duplicate_values.empty:
            for index, _ in duplicate_values.iterrows():
                errors.append(f"Lỗi ở dòng {index + 1}, {column}: {duplicate_errors_message.get(column)}")
    #Check tiếng việt
    for column in vn_col:
        for index, value in df.iterrows():
            if pd.notna(value[column]) and not validate_vietnamese(value[column]):
                 errors.append(f"Lỗi ở dòng {index + 1}, {column}: {Non_Vietnamese_errors_message.get(column)}")
                 
    #Check format ngày giờ
    for column in date_col:
        for index, row in df.iterrows():
            date_value = row[column]
        if not pd.isnull(date_value) and isinstance(date_value, pd.Timestamp):
            valid, message = validate_date(column, date_value)
            if not valid:
                errors.append(f"Lỗi ở dòng {index + 1}, {column}: {message}")
        elif pd.isnull(date_value):
            errors.append(f"Lỗi ở dòng {index + 1}, {column}: Giá trị ngày không được để trống.")
        else:
            errors.append(f"Lỗi ở dòng {index + 1}, {column}: {date_errors_message[column]} định dạng phải là dd/mm/yyyy.")


    errors.sort(key=lambda x: (int(x.split(',')[0].split(' ')[-1]), x.split(',')[1])) #Sort lỗi theo dòng + cột
    return errors

def read_excel(filepath):
    try:
        df = pd.read_excel(filepath)
        return df
    except Exception as e:
        print(f"Không load được DF: {str(e)}")
        return None

def main():
    root = tk.Tk()
    root.withdraw() 
    filepath = filedialog.askopenfilename(filetypes=[("Excel files", "*.xlsx;*.xls")])
    if filepath: 
        df = read_excel(filepath)
        if df is not None:
            errors = validation(df)
            if errors:
                for error in errors:
                    print(error)
            else:
                print("Hem có lỗi.")
    else:
        print("Không có file được chọn")

if __name__ == "__main__":
    main()
